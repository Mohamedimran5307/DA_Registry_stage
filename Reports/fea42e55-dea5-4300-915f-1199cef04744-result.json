{"name": "test_add_connector[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000102c3ea6c chromedriver + 4303468\n1   chromedriver                        0x0000000102c37198 chromedriver + 4272536\n2   chromedriver                        0x000000010286b594 chromedriver + 292244\n3   chromedriver                        0x00000001028a88fc chromedriver + 542972\n4   chromedriver                        0x00000001028e1628 chromedriver + 775720\n5   chromedriver                        0x000000010289cb40 chromedriver + 494400\n6   chromedriver                        0x000000010289d988 chromedriver + 498056\n7   chromedriver                        0x0000000102bff924 chromedriver + 4045092\n8   chromedriver                        0x0000000102c03e68 chromedriver + 4062824\n9   chromedriver                        0x0000000102c0a088 chromedriver + 4087944\n10  chromedriver                        0x0000000102c0496c chromedriver + 4065644\n11  chromedriver                        0x0000000102bdce64 chromedriver + 3903076\n12  chromedriver                        0x0000000102c2055c chromedriver + 4179292\n13  chromedriver                        0x0000000102c206b4 chromedriver + 4179636\n14  chromedriver                        0x0000000102c30978 chromedriver + 4245880\n15  libsystem_pthread.dylib             0x00000001952f7fa8 _pthread_start + 148\n16  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8", "trace": "self = <Testcases.test_connectorpage.Test_add_connector object at 0x106e05750>\n\n    @allure.description(\"Testing Adding Connector\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_add_connector(self):\n        self.loginpage = Loginpage(self.driver)\n        sleep(2)\n        self.driver.execute_script(\"window.localStorage.clear();\")\n        self.driver.maximize_window()\n        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)\n        self.loginpage.do_click(Loginpage.USERNAME_FIELD)\n        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)\n        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)\n        sleep(2)\n        self.loginpage.do_click(Loginpage.ENTER_OTP)\n        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)\n        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)\n        sleep(2)\n        self.connectors_page = Connectorspage(self.driver)\n        self.connectors_page.do_click(Connectorspage.CONNECTOR_BUTTON)\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.ADD_CONNECTOR_BUTTON)\n        self.connectors_page.do_click(Connectorspage.CONNECTOR_NAME_FIELD)\n        self.connectors_page.do_sendkeys(Connectorspage.CONNECTOR_NAME_FIELD, Testdata.CONNECTOR_NAME)\n        self.connectors_page.do_click(Connectorspage.CONNECTOR_DESCRIPTION_FIELD)\n        self.connectors_page.do_sendkeys(Connectorspage.CONNECTOR_DESCRIPTION_FIELD, Testdata.CONNECTOR_DESCRIPTION)\n        self.driver.execute_script(\"window.scrollBy(0,300);\")\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.SELECT_ORGANIZATION_DROPDOWN)\n        self.connectors_page.do_click(Connectorspage.SELECT_ORGANIZATION_1)\n        self.connectors_page.do_click(Connectorspage.SELECT_DATASET_DROPDOWN)\n        sleep(2)\n>       self.connectors_page.do_click(Connectorspage.SELECT_DATASET_1)\n\ntest_connectorpage.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../Pageobjects/Basepage.py:26: in do_click\n    element = wait.until(EC.visibility_of_element_located(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5f16c6848c007bdfc163ea950fcc3ffa\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x107012dd0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000102c3ea6c chromedriver + 4303468\nE       1   chromedriver                        0x0000000102c37198 chromedriver + 4272536\nE       2   chromedriver                        0x000000010286b594 chromedriver + 292244\nE       3   chromedriver                        0x00000001028a88fc chromedriver + 542972\nE       4   chromedriver                        0x00000001028e1628 chromedriver + 775720\nE       5   chromedriver                        0x000000010289cb40 chromedriver + 494400\nE       6   chromedriver                        0x000000010289d988 chromedriver + 498056\nE       7   chromedriver                        0x0000000102bff924 chromedriver + 4045092\nE       8   chromedriver                        0x0000000102c03e68 chromedriver + 4062824\nE       9   chromedriver                        0x0000000102c0a088 chromedriver + 4087944\nE       10  chromedriver                        0x0000000102c0496c chromedriver + 4065644\nE       11  chromedriver                        0x0000000102bdce64 chromedriver + 3903076\nE       12  chromedriver                        0x0000000102c2055c chromedriver + 4179292\nE       13  chromedriver                        0x0000000102c206b4 chromedriver + 4179636\nE       14  chromedriver                        0x0000000102c30978 chromedriver + 4245880\nE       15  libsystem_pthread.dylib             0x00000001952f7fa8 _pthread_start + 148\nE       16  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8\n\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "description": "Testing Adding Connector", "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1692004711226, "stop": 1692004738761, "uuid": "2eb507b2-2d0c-456d-8c38-c3b6a48a9e74", "historyId": "bfb4a22ad3a7602a934a95116ad59287", "testCaseId": "04d5ff784426d9dcabd9f5edd03de898", "fullName": "test_connectorpage.Test_add_connector#test_add_connector", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "tag", "value": "flaky(reruns=3)"}, {"name": "suite", "value": "test_connectorpage"}, {"name": "subSuite", "value": "Test_add_connector"}, {"name": "host", "value": "Shaiks-MacBook-Pro.local"}, {"name": "thread", "value": "68561-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_connectorpage"}]}