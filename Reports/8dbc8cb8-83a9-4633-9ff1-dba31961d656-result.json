{"name": "test_Admin_adding_participant[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button disabled=\"\" id=\"add-participant-submit-button\" type=\"button\" class=\"global_primary_button__33Zcr ParticipantForm_primaryButton__12SUz btn btn-primary\">...</button> is not clickable at point (1725, 503). Other element would receive the click: <div class=\"ParticipantForm_buttonContainer__3Rj_d row\">...</div>\n  (Session info: headless chrome=115.0.5790.170)\nStacktrace:\n0   chromedriver                        0x0000000100db6a6c chromedriver + 4303468\n1   chromedriver                        0x0000000100daf198 chromedriver + 4272536\n2   chromedriver                        0x00000001009e3594 chromedriver + 292244\n3   chromedriver                        0x0000000100a271d0 chromedriver + 569808\n4   chromedriver                        0x0000000100a253bc chromedriver + 562108\n5   chromedriver                        0x0000000100a230f8 chromedriver + 553208\n6   chromedriver                        0x0000000100a221e4 chromedriver + 549348\n7   chromedriver                        0x0000000100a16958 chromedriver + 502104\n8   chromedriver                        0x0000000100a16220 chromedriver + 500256\n9   chromedriver                        0x0000000100a59628 chromedriver + 775720\n10  chromedriver                        0x0000000100a14b40 chromedriver + 494400\n11  chromedriver                        0x0000000100a15988 chromedriver + 498056\n12  chromedriver                        0x0000000100d77924 chromedriver + 4045092\n13  chromedriver                        0x0000000100d7be68 chromedriver + 4062824\n14  chromedriver                        0x0000000100d82088 chromedriver + 4087944\n15  chromedriver                        0x0000000100d7c96c chromedriver + 4065644\n16  chromedriver                        0x0000000100d54e64 chromedriver + 3903076\n17  chromedriver                        0x0000000100d9855c chromedriver + 4179292\n18  chromedriver                        0x0000000100d986b4 chromedriver + 4179636\n19  chromedriver                        0x0000000100da8978 chromedriver + 4245880\n20  libsystem_pthread.dylib             0x00000001952f7fa8 _pthread_start + 148\n21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8", "trace": "self = <Testcases.test_addparticipantpage.Test_add_participant object at 0x106dccc70>\n\n    @allure.description(\"Testing Admin Adding Participant\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_Admin_adding_participant(self):\n        self.loginpage = Loginpage(self.driver)\n        sleep(3)\n        self.driver.execute_script(\"window.localStorage.clear();\")\n        sleep(3)\n        self.driver.execute_script(\"window.location.reload(true);\")\n        sleep(2)\n        self.driver.maximize_window()\n        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)\n        sleep(2)\n        self.loginpage.do_click(Loginpage.USERNAME_FIELD)\n        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)\n        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)\n        sleep(2)\n        self.loginpage.do_click(Loginpage.ENTER_OTP)\n        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)\n        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)\n        sleep(2)\n        self.participant_page = Participant_page(self.driver)\n        self.driver.maximize_window()\n        self.participant_page.do_click(Participant_page.PARTICIPANTS_BUTTON)\n        sleep(2)\n        self.participant_page.do_click(Participant_page.PARTICIPANT_BUTTON)\n        sleep(2)\n        self.participant_page.do_click(Participant_page.PARTICIPANT_CARD_BUTTON)\n        sleep(1)\n        self.participant_page.do_click(Participant_page.ORGANIZATION_NAME_FIELD)\n        sleep(2)\n        self.participant_page.do_sendkeys(Participant_page.ORGANIZATION_NAME_FIELD, Testdata.ORGANIZATION_NAME)\n        sleep(1)\n        self.participant_page.do_click(Participant_page.ORGANIZATION_EMAIL_ID_FIELD)\n        self.participant_page.do_sendkeys(Participant_page.ORGANIZATION_EMAIL_ID_FIELD, Testdata.ORGANIZATION_EMAIL_ID)\n        sleep(2)\n        self.participant_page.do_click(Participant_page.ORGANIZATION_WEBSITE_LINK)\n        self.participant_page.do_sendkeys(Participant_page.ORGANIZATION_WEBSITE_LINK,\n                                          Testdata.ORGANIZATION_WEBSITE_LINK)\n        self.participant_page.do_click(Participant_page.ORGANIZATION_ADDRESS)\n        self.participant_page.do_sendkeys(Participant_page.ORGANIZATION_ADDRESS, Testdata.ORGANIZATION_ADDRESS)\n        self.participant_page.do_click(Participant_page.COUNTRY_DROP_DOWN)\n        sleep(1)\n        self.participant_page.do_click(Participant_page.SELECT_COUNTRY)\n        self.participant_page.do_click(Participant_page.PINCODE_FIELD)\n        self.participant_page.do_sendkeys(Participant_page.PINCODE_FIELD, Testdata.PINCODE)\n        sleep(2)\n        self.driver.execute_script(\"window.scrollBy(0,500);\")\n        sleep(2)\n        self.participant_page.do_click(Participant_page.FIRST_NAME_FIELD)\n        self.participant_page.do_sendkeys(Participant_page.FIRST_NAME_FIELD, Testdata.FIRST_NAME)\n        self.participant_page.do_click(Participant_page.LAST_NAME_FIELD)\n        self.participant_page.do_sendkeys(Participant_page.LAST_NAME_FIELD, Testdata.LAST_NAME)\n        self.participant_page.do_click(Participant_page.ORGANIZATION_ROOT_USER_EMAIL_ID_FIELD)\n        self.participant_page.do_sendkeys(Participant_page.ORGANIZATION_ROOT_USER_EMAIL_ID_FIELD,\n                                          Testdata.ORGANIZATION_ROOT_USER_EMAIL_ID_2)\n        self.participant_page.do_click(Participant_page.ORGANIZATION_CONTACT_NUMBER)\n        self.participant_page.do_sendkeys(Participant_page.ORGANIZATION_CONTACT_NUMBER, Testdata.CONTACT_NUMBER)\n        sleep(3)\n>       self.participant_page.do_click(Participant_page.SUBMIT_BUTTON)\n\ntest_addparticipantpage.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../Pageobjects/Basepage.py:28: in do_click\n    element.click()\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x106e9bb20>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...0001952f7fa8 _pthread_start + 148\\\\n21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button disabled=\"\" id=\"add-participant-submit-button\" type=\"button\" class=\"global_primary_button__33Zcr ParticipantForm_primaryButton__12SUz btn btn-primary\">...</button> is not clickable at point (1725, 503). Other element would receive the click: <div class=\"ParticipantForm_buttonContainer__3Rj_d row\">...</div>\nE         (Session info: headless chrome=115.0.5790.170)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000100db6a6c chromedriver + 4303468\nE       1   chromedriver                        0x0000000100daf198 chromedriver + 4272536\nE       2   chromedriver                        0x00000001009e3594 chromedriver + 292244\nE       3   chromedriver                        0x0000000100a271d0 chromedriver + 569808\nE       4   chromedriver                        0x0000000100a253bc chromedriver + 562108\nE       5   chromedriver                        0x0000000100a230f8 chromedriver + 553208\nE       6   chromedriver                        0x0000000100a221e4 chromedriver + 549348\nE       7   chromedriver                        0x0000000100a16958 chromedriver + 502104\nE       8   chromedriver                        0x0000000100a16220 chromedriver + 500256\nE       9   chromedriver                        0x0000000100a59628 chromedriver + 775720\nE       10  chromedriver                        0x0000000100a14b40 chromedriver + 494400\nE       11  chromedriver                        0x0000000100a15988 chromedriver + 498056\nE       12  chromedriver                        0x0000000100d77924 chromedriver + 4045092\nE       13  chromedriver                        0x0000000100d7be68 chromedriver + 4062824\nE       14  chromedriver                        0x0000000100d82088 chromedriver + 4087944\nE       15  chromedriver                        0x0000000100d7c96c chromedriver + 4065644\nE       16  chromedriver                        0x0000000100d54e64 chromedriver + 3903076\nE       17  chromedriver                        0x0000000100d9855c chromedriver + 4179292\nE       18  chromedriver                        0x0000000100d986b4 chromedriver + 4179636\nE       19  chromedriver                        0x0000000100da8978 chromedriver + 4245880\nE       20  libsystem_pthread.dylib             0x00000001952f7fa8 _pthread_start + 148\nE       21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8\n\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "description": "Testing Admin Adding Participant", "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1692003272110, "stop": 1692003312038, "uuid": "81005c09-3fff-4ae4-929c-ea4f22e08108", "historyId": "30e18ce24030019faef506eeba8ef357", "testCaseId": "9eca89740c2519b7e006d1deb47ba1c3", "fullName": "test_addparticipantpage.Test_add_participant#test_Admin_adding_participant", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "tag", "value": "flaky(reruns=3)"}, {"name": "suite", "value": "test_addparticipantpage"}, {"name": "subSuite", "value": "Test_add_participant"}, {"name": "host", "value": "Shaiks-MacBook-Pro.local"}, {"name": "thread", "value": "68561-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_addparticipantpage"}]}