{"uid":"b41b1823eb664d9e","name":"test_add_connector[chrome]","fullName":"test_connectorpage.Test_add_connector#test_add_connector","historyId":"bfb4a22ad3a7602a934a95116ad59287","time":{"start":1691999064676,"stop":1691999132423,"duration":67747},"description":"Testing Adding Connector","descriptionHtml":"<p>Testing Adding Connector</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (1057, 240). Other element would receive the click: <input aria-invalid=\"false\" placeholder=\"Enter column name\" type=\"text\" maxlength=\"50\" class=\"MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputSizeSmall css-1o6z5ng\" value=\"\" id=\"mui-30\">\n  (Session info: headless chrome=115.0.5790.170)\nStacktrace:\n0   chromedriver                        0x00000001013faa6c chromedriver + 4303468\n1   chromedriver                        0x00000001013f3198 chromedriver + 4272536\n2   chromedriver                        0x0000000101027594 chromedriver + 292244\n3   chromedriver                        0x000000010106b1d0 chromedriver + 569808\n4   chromedriver                        0x00000001010693bc chromedriver + 562108\n5   chromedriver                        0x00000001010670f8 chromedriver + 553208\n6   chromedriver                        0x00000001010661e4 chromedriver + 549348\n7   chromedriver                        0x000000010105a958 chromedriver + 502104\n8   chromedriver                        0x000000010105a220 chromedriver + 500256\n9   chromedriver                        0x000000010109d628 chromedriver + 775720\n10  chromedriver                        0x0000000101058b40 chromedriver + 494400\n11  chromedriver                        0x0000000101059988 chromedriver + 498056\n12  chromedriver                        0x00000001013bb924 chromedriver + 4045092\n13  chromedriver                        0x00000001013bfe68 chromedriver + 4062824\n14  chromedriver                        0x00000001013c6088 chromedriver + 4087944\n15  chromedriver                        0x00000001013c096c chromedriver + 4065644\n16  chromedriver                        0x0000000101398e64 chromedriver + 3903076\n17  chromedriver                        0x00000001013dc55c chromedriver + 4179292\n18  chromedriver                        0x00000001013dc6b4 chromedriver + 4179636\n19  chromedriver                        0x00000001013ec978 chromedriver + 4245880\n20  libsystem_pthread.dylib             0x00000001952f7fa8 _pthread_start + 148\n21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8","statusTrace":"self = <Testcases.test_connectorpage.Test_add_connector object at 0x1042c1600>\n\n    @allure.description(\"Testing Adding Connector\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_add_connector(self):\n        self.loginpage = Loginpage(self.driver)\n        sleep(2)\n        self.driver.execute_script(\"window.localStorage.clear();\")\n        self.driver.maximize_window()\n        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)\n        self.loginpage.do_click(Loginpage.USERNAME_FIELD)\n        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)\n        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)\n        sleep(2)\n        self.loginpage.do_click(Loginpage.ENTER_OTP)\n        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)\n        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)\n        sleep(2)\n        self.connectors_page = Connectorspage(self.driver)\n        self.connectors_page.do_click(Connectorspage.CONNECTOR_BUTTON)\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.ADD_CONNECTOR_BUTTON)\n        self.connectors_page.do_click(Connectorspage.CONNECTOR_NAME_FIELD)\n        self.connectors_page.do_sendkeys(Connectorspage.CONNECTOR_NAME_FIELD, Testdata.CONNECTOR_NAME)\n        self.connectors_page.do_click(Connectorspage.CONNECTOR_DESCRIPTION_FIELD)\n        self.connectors_page.do_sendkeys(Connectorspage.CONNECTOR_DESCRIPTION_FIELD, Testdata.CONNECTOR_DESCRIPTION)\n        self.driver.execute_script(\"window.scrollBy(0,300);\")\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.SELECT_ORGANIZATION_DROPDOWN)\n        self.connectors_page.do_click(Connectorspage.SELECT_ORGANIZATION_1)\n        self.connectors_page.do_click(Connectorspage.SELECT_DATASET_DROPDOWN)\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.SELECT_DATASET_1)\n        self.connectors_page.do_click(Connectorspage.SELECT_FILE_DROPDOWN)\n        self.connectors_page.do_click(Connectorspage.SELECT_DATASET_FILE)\n        self.connectors_page.do_click(Connectorspage.ADD_BUTTON)\n        self.driver.execute_script(\"window.scrollBy(0,500);\")\n        sleep(2)\n        self.connectors_page.do_clickable_Checkbox_Connectors()\n        sleep(3)\n        self.connectors_page.do_scroll_up(Connectorspage.CONNECTOR_NAME_FIELD)\n        # self.driver.execute_script(\"window.scrollBy(0,-3000);\")\n        self.connectors_page.do_click(Connectorspage.SELECT_ORGANIZATION_DROPDOWN)\n        self.connectors_page.do_click(Connectorspage.SELECT_ORGANIZATION_2)\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.SELECT_DATASET_DROPDOWN)\n        self.connectors_page.do_click(Connectorspage.SELECT_DATASET_2)\n        self.connectors_page.do_click(Connectorspage.SELECT_FILE_DROPDOWN)\n        self.connectors_page.do_click(Connectorspage.SELECT_DATASET_FILE)\n        self.connectors_page.do_click(Connectorspage.ADD_BUTTON)\n        sleep(3)\n        self.driver.execute_script(\"window.scrollBy(0,1100);\")\n        sleep(2)\n        self.connectors_page.do_clickable_Checkbox_Connectors_2()\n        sleep(2)\n        self.driver.execute_script(\"window.scrollBy(0,-300);\")\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.JOIN_BY_ICON)\n        sleep(2)\n        self.driver.execute_script(\"window.scrollBy(0,600);\")\n        self.connectors_page.do_click(Connectorspage.LEFT_JOIN_FIELD)\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.SELECT_ANY_COLUMN_LEFT)\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.RIGHT_JOIN_FIELD)\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.SELECT_ANY_COLUMN_RIGHT)\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.JOIN_TYPE_ICON)\n        sleep(2)\n        self.driver.execute_script(\"window.scrollBy(0,300);\")\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.APPLY_BUTTON)\n        sleep(3)\n        self.driver.execute_script(\"window.scrollBy(0,1300);\")\n        sleep(2)\n        self.connectors_page.do_click(Connectorspage.DOWNLOAD_BUTTON)\n        sleep(2)\n>       self.connectors_page.do_click_RENAME_COLUMN_FIELD()\n\ntest_connectorpage.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../Pageobjects/Basepage.py:315: in do_click_RENAME_COLUMN_FIELD\n    self.driver.find_element(By.XPATH, \"//span[text()='New column name']\").click()\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1045f4400>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...0001952f7fa8 _pthread_start + 148\\\\n21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (1057, 240). Other element would receive the click: <input aria-invalid=\"false\" placeholder=\"Enter column name\" type=\"text\" maxlength=\"50\" class=\"MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputSizeSmall css-1o6z5ng\" value=\"\" id=\"mui-30\">\nE         (Session info: headless chrome=115.0.5790.170)\nE       Stacktrace:\nE       0   chromedriver                        0x00000001013faa6c chromedriver + 4303468\nE       1   chromedriver                        0x00000001013f3198 chromedriver + 4272536\nE       2   chromedriver                        0x0000000101027594 chromedriver + 292244\nE       3   chromedriver                        0x000000010106b1d0 chromedriver + 569808\nE       4   chromedriver                        0x00000001010693bc chromedriver + 562108\nE       5   chromedriver                        0x00000001010670f8 chromedriver + 553208\nE       6   chromedriver                        0x00000001010661e4 chromedriver + 549348\nE       7   chromedriver                        0x000000010105a958 chromedriver + 502104\nE       8   chromedriver                        0x000000010105a220 chromedriver + 500256\nE       9   chromedriver                        0x000000010109d628 chromedriver + 775720\nE       10  chromedriver                        0x0000000101058b40 chromedriver + 494400\nE       11  chromedriver                        0x0000000101059988 chromedriver + 498056\nE       12  chromedriver                        0x00000001013bb924 chromedriver + 4045092\nE       13  chromedriver                        0x00000001013bfe68 chromedriver + 4062824\nE       14  chromedriver                        0x00000001013c6088 chromedriver + 4087944\nE       15  chromedriver                        0x00000001013c096c chromedriver + 4065644\nE       16  chromedriver                        0x0000000101398e64 chromedriver + 3903076\nE       17  chromedriver                        0x00000001013dc55c chromedriver + 4179292\nE       18  chromedriver                        0x00000001013dc6b4 chromedriver + 4179636\nE       19  chromedriver                        0x00000001013ec978 chromedriver + 4245880\nE       20  libsystem_pthread.dylib             0x00000001952f7fa8 _pthread_start + 148\nE       21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8\n\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_driver","time":{"start":1691999063785,"stop":1691999064676,"duration":891},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"init_driver::0","time":{"start":1691999132509,"stop":1691999132675,"duration":166},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"tag","value":"@pytest.mark.usefixtures('init_driver')"},{"name":"suite","value":"test_connectorpage"},{"name":"subSuite","value":"Test_add_connector"},{"name":"host","value":"Shaiks-MacBook-Pro.local"},{"name":"thread","value":"67190-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_connectorpage"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"init_driver","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"1eb512a773033004","reportUrl":"http://Mohamed_Imran_Jenkins/job/PAGE_OBJECT_MODEL/8/allure/#testresult/1eb512a773033004","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (1057, 240). Other element would receive the click: <input aria-invalid=\"false\" placeholder=\"Enter column name\" type=\"text\" maxlength=\"50\" class=\"MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputSizeSmall css-1o6z5ng\" value=\"\" id=\"mui-30\">\n  (Session info: headless chrome=115.0.5790.170)\nStacktrace:\n0   chromedriver                        0x00000001013faa6c chromedriver + 4303468\n1   chromedriver                        0x00000001013f3198 chromedriver + 4272536\n2   chromedriver                        0x0000000101027594 chromedriver + 292244\n3   chromedriver                        0x000000010106b1d0 chromedriver + 569808\n4   chromedriver                        0x00000001010693bc chromedriver + 562108\n5   chromedriver                        0x00000001010670f8 chromedriver + 553208\n6   chromedriver                        0x00000001010661e4 chromedriver + 549348\n7   chromedriver                        0x000000010105a958 chromedriver + 502104\n8   chromedriver                        0x000000010105a220 chromedriver + 500256\n9   chromedriver                        0x000000010109d628 chromedriver + 775720\n10  chromedriver                        0x0000000101058b40 chromedriver + 494400\n11  chromedriver                        0x0000000101059988 chromedriver + 498056\n12  chromedriver                        0x00000001013bb924 chromedriver + 4045092\n13  chromedriver                        0x00000001013bfe68 chromedriver + 4062824\n14  chromedriver                        0x00000001013c6088 chromedriver + 4087944\n15  chromedriver                        0x00000001013c096c chromedriver + 4065644\n16  chromedriver                        0x0000000101398e64 chromedriver + 3903076\n17  chromedriver                        0x00000001013dc55c chromedriver + 4179292\n18  chromedriver                        0x00000001013dc6b4 chromedriver + 4179636\n19  chromedriver                        0x00000001013ec978 chromedriver + 4245880\n20  libsystem_pthread.dylib             0x00000001952f7fa8 _pthread_start + 148\n21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8","time":{"start":1691999064676,"stop":1691999132423,"duration":67747}}]},"tags":["@pytest.mark.usefixtures('init_driver')"]},"source":"b41b1823eb664d9e.json","parameterValues":["'chrome'"]}