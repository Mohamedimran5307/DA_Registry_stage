{"uid":"7a71e2b570bd0952","name":"test_adding_dataset_REST_API[chrome]","fullName":"test_datasetpage.Test_datasetpage#test_adding_dataset_REST_API","historyId":"490939e268c66d031bbe5d765f90c1c5","time":{"start":1691999550988,"stop":1691999657673,"duration":106685},"description":"Testing Adding Dataset from Rest_API","descriptionHtml":"<p>Testing Adding Dataset from Rest_API</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"PrivateSwitchBase-input css-1m9pwf3\" id=\"check-box-0\" type=\"checkbox\" data-indeterminate=\"false\"> is not clickable at point (182, 559). Other element would receive the click: <div class=\"MuiButtonBase-root MuiAccordionSummary-root Mui-expanded MuiAccordionSummary-gutters css-1x8yvxq\" tabindex=\"0\" role=\"button\" aria-expanded=\"true\" aria-controls=\"panel4bh-content\" id=\"panel4bh-header\">...</div>\n  (Session info: headless chrome=115.0.5790.170)\nStacktrace:\n0   chromedriver                        0x0000000102906a6c chromedriver + 4303468\n1   chromedriver                        0x00000001028ff198 chromedriver + 4272536\n2   chromedriver                        0x0000000102533594 chromedriver + 292244\n3   chromedriver                        0x00000001025771d0 chromedriver + 569808\n4   chromedriver                        0x00000001025753bc chromedriver + 562108\n5   chromedriver                        0x00000001025730f8 chromedriver + 553208\n6   chromedriver                        0x00000001025721e4 chromedriver + 549348\n7   chromedriver                        0x0000000102566958 chromedriver + 502104\n8   chromedriver                        0x0000000102566220 chromedriver + 500256\n9   chromedriver                        0x00000001025a9628 chromedriver + 775720\n10  chromedriver                        0x0000000102564b40 chromedriver + 494400\n11  chromedriver                        0x0000000102565988 chromedriver + 498056\n12  chromedriver                        0x00000001028c7924 chromedriver + 4045092\n13  chromedriver                        0x00000001028cbe68 chromedriver + 4062824\n14  chromedriver                        0x00000001028d2088 chromedriver + 4087944\n15  chromedriver                        0x00000001028cc96c chromedriver + 4065644\n16  chromedriver                        0x00000001028a4e64 chromedriver + 3903076\n17  chromedriver                        0x00000001028e855c chromedriver + 4179292\n18  chromedriver                        0x00000001028e86b4 chromedriver + 4179636\n19  chromedriver                        0x00000001028f8978 chromedriver + 4245880\n20  libsystem_pthread.dylib             0x00000001952f7fa8 _pthread_start + 148\n21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8","statusTrace":"self = <Testcases.test_datasetpage.Test_datasetpage object at 0x1042c1270>\n\n    @allure.description(\"Testing Adding Dataset from Rest_API\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_adding_dataset_REST_API(self):\n        self.loginpage = Loginpage(self.driver)\n        sleep(3)\n        self.driver.execute_script(\"window.localStorage.clear();\")\n        sleep(3)\n        self.driver.execute_script(\"window.location.reload(true);\")\n        sleep(2)\n        self.driver.maximize_window()\n        self.loginpage.do_click(Loginpage.LOGIN_AS_ADMIN_BUTTON)\n        self.loginpage.do_click(Loginpage.USERNAME_FIELD)\n        self.loginpage.do_sendkeys(Loginpage.USERNAME_FIELD, Testdata.USER_NAME)\n        self.loginpage.do_click(Loginpage.SEND_OTP_BUTTON)\n        sleep(2)\n        self.loginpage.do_click(Loginpage.ENTER_OTP)\n        self.loginpage.do_sendkeys(Loginpage.ENTER_OTP, Testdata.OTP)\n        self.loginpage.do_click(Loginpage.VERIFY_OTP_BUTTON)\n        sleep(2)\n        self.datasets_page = Datasetspage(self.driver)\n        sleep(2)\n        self.loginpage.do_click(Datasetspage.DATASET_TAB)\n        sleep(2)\n        self.driver.execute_script(\"window.scrollBy(0,500);\")\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.ADD_NEW_DATASET)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.ADD_DATASET_NAME_FIELD)\n        self.datasets_page.do_sendkeys(Datasetspage.ADD_DATASET_NAME_FIELD, Testdata.DATASET_NAME_REST_API)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.Add_DATASET_DESCRIPTION_FIELD)\n        self.datasets_page.do_sendkeys(Datasetspage.Add_DATASET_DESCRIPTION_FIELD,\n                                       Testdata.DATASET_DESCRIPTION_REST_API)\n        sleep(2)\n        self.driver.execute_script(\"window.scrollBy(0,400);\")\n        sleep(2)\n        self.datasets_page.do_click_constanly_updating_checkbox()\n        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)\n        sleep(5)\n        self.driver.execute_script(\"window.scrollBy(0,500);\")\n        sleep(5)\n        self.datasets_page.do_click(Datasetspage.REST_API_TAB)\n        sleep(2)\n        #\n        # NO_AUTH\n        self.datasets_page.do_click(Datasetspage.API_URL_FIELD)\n        sleep(2)\n        self.datasets_page.do_sendkeys(Datasetspage.API_URL_FIELD, Testdata.GET_API_URL_NOAUTH)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.AUTH_TYPE_FIELD)\n        self.datasets_page.do_click(Datasetspage.NO_AUTH_OPTION)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD)\n        sleep(2)\n        self.datasets_page.do_sendkeys(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD, Testdata.FILE_NAME_NOAUTH)\n        self.datasets_page.do_click(Datasetspage.IMPORT_REST_API_BUTTON)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.POSTGRES_TAB)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.REST_API_TAB)\n        sleep(2)\n    \n        # # API_KEY\n        #\n        self.datasets_page.do_click(Datasetspage.API_URL_FIELD)\n        self.datasets_page.do_sendkeys(Datasetspage.API_URL_FIELD, Testdata.GET_API_URL_API_KEY)\n        self.datasets_page.do_click(Datasetspage.AUTH_TYPE_FIELD)\n        self.datasets_page.do_click(Datasetspage.API_KEY_OPTION)\n        self.datasets_page.do_click(Datasetspage.API_KEY_NAME_FIELD)\n        self.datasets_page.do_sendkeys(Datasetspage.API_KEY_NAME_FIELD, Testdata.API_KEY_NAME)\n        self.datasets_page.do_click(Datasetspage.KEY_KEY_VALUE_FIELD)\n        self.datasets_page.do_sendkeys(Datasetspage.KEY_KEY_VALUE_FIELD, Testdata.API_KEY_VALUE)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD)\n        self.datasets_page.do_sendkeys(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD, Testdata.FILE_NAME_API_KEY)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.IMPORT_REST_API_BUTTON)\n        sleep(10)\n        self.datasets_page.do_click(Datasetspage.POSTGRES_TAB)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.REST_API_TAB)\n        sleep(2)\n    \n        # BEARER\n        self.datasets_page.do_click(Datasetspage.API_URL_FIELD)\n        self.datasets_page.do_sendkeys(Datasetspage.API_URL_FIELD, Testdata.GET_API_URL_BEARER)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.AUTH_TYPE_FIELD)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.BEARER_OPTION)\n        self.datasets_page.do_click(Datasetspage.AUTH_TOKEN_FIELD)\n        sleep(2)\n        text = self.datasets_page.get_AUTH_TOKEN()\n        self.datasets_page.do_sendkeys(Datasetspage.AUTH_TOKEN_FIELD, text.replace('\"', ''))\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD)\n        self.datasets_page.do_sendkeys(Datasetspage.FILE_NAME_REST_API_IMPORT_DATA_FIELD, Testdata.FILE_NAME_BEARER)\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.IMPORT_REST_API_BUTTON)\n        sleep(3)\n        self.driver.execute_script(\"window.scrollBy(0,300);\")\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)\n        sleep(2)\n        self.driver.execute_script(\"window.scrollBy(0,300);\")\n        sleep(2)\n        self.datasets_page.do_click(Datasetspage.NEXT_BUTTON)\n        self.driver.execute_script(\"window.scrollBy(0,-300);\")\n        self.datasets_page.do_click(Datasetspage.CATEGORY_ACCORDION)\n>       self.datasets_page.do_clickable_CATEGORY()\n\ntest_datasetpage.py:628: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../Pageobjects/Basepage.py:73: in do_clickable_CATEGORY\n    self.driver.find_element(By.ID, \"check-box-0\").click()\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x104691db0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...0001952f7fa8 _pthread_start + 148\\\\n21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"PrivateSwitchBase-input css-1m9pwf3\" id=\"check-box-0\" type=\"checkbox\" data-indeterminate=\"false\"> is not clickable at point (182, 559). Other element would receive the click: <div class=\"MuiButtonBase-root MuiAccordionSummary-root Mui-expanded MuiAccordionSummary-gutters css-1x8yvxq\" tabindex=\"0\" role=\"button\" aria-expanded=\"true\" aria-controls=\"panel4bh-content\" id=\"panel4bh-header\">...</div>\nE         (Session info: headless chrome=115.0.5790.170)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000102906a6c chromedriver + 4303468\nE       1   chromedriver                        0x00000001028ff198 chromedriver + 4272536\nE       2   chromedriver                        0x0000000102533594 chromedriver + 292244\nE       3   chromedriver                        0x00000001025771d0 chromedriver + 569808\nE       4   chromedriver                        0x00000001025753bc chromedriver + 562108\nE       5   chromedriver                        0x00000001025730f8 chromedriver + 553208\nE       6   chromedriver                        0x00000001025721e4 chromedriver + 549348\nE       7   chromedriver                        0x0000000102566958 chromedriver + 502104\nE       8   chromedriver                        0x0000000102566220 chromedriver + 500256\nE       9   chromedriver                        0x00000001025a9628 chromedriver + 775720\nE       10  chromedriver                        0x0000000102564b40 chromedriver + 494400\nE       11  chromedriver                        0x0000000102565988 chromedriver + 498056\nE       12  chromedriver                        0x00000001028c7924 chromedriver + 4045092\nE       13  chromedriver                        0x00000001028cbe68 chromedriver + 4062824\nE       14  chromedriver                        0x00000001028d2088 chromedriver + 4087944\nE       15  chromedriver                        0x00000001028cc96c chromedriver + 4065644\nE       16  chromedriver                        0x00000001028a4e64 chromedriver + 3903076\nE       17  chromedriver                        0x00000001028e855c chromedriver + 4179292\nE       18  chromedriver                        0x00000001028e86b4 chromedriver + 4179636\nE       19  chromedriver                        0x00000001028f8978 chromedriver + 4245880\nE       20  libsystem_pthread.dylib             0x00000001952f7fa8 _pthread_start + 148\nE       21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8\n\n../../../../IdeaProjects/Farmstack 2.0/venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_driver","time":{"start":1691999132679,"stop":1691999133472,"duration":793},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"init_driver::0","time":{"start":1692000136495,"stop":1692000136675,"duration":180},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"tag","value":"@pytest.mark.usefixtures('init_driver')"},{"name":"suite","value":"test_datasetpage"},{"name":"subSuite","value":"Test_datasetpage"},{"name":"host","value":"Shaiks-MacBook-Pro.local"},{"name":"thread","value":"67190-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_datasetpage"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"init_driver","value":"'chrome'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"f91071a1cc1f2033","reportUrl":"http://Mohamed_Imran_Jenkins/job/PAGE_OBJECT_MODEL/8/allure/#testresult/f91071a1cc1f2033","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <input class=\"PrivateSwitchBase-input css-1m9pwf3\" id=\"check-box-0\" type=\"checkbox\" data-indeterminate=\"false\"> is not clickable at point (182, 559). Other element would receive the click: <div class=\"MuiButtonBase-root MuiAccordionSummary-root Mui-expanded MuiAccordionSummary-gutters css-1x8yvxq\" tabindex=\"0\" role=\"button\" aria-expanded=\"true\" aria-controls=\"panel4bh-content\" id=\"panel4bh-header\">...</div>\n  (Session info: headless chrome=115.0.5790.170)\nStacktrace:\n0   chromedriver                        0x0000000102906a6c chromedriver + 4303468\n1   chromedriver                        0x00000001028ff198 chromedriver + 4272536\n2   chromedriver                        0x0000000102533594 chromedriver + 292244\n3   chromedriver                        0x00000001025771d0 chromedriver + 569808\n4   chromedriver                        0x00000001025753bc chromedriver + 562108\n5   chromedriver                        0x00000001025730f8 chromedriver + 553208\n6   chromedriver                        0x00000001025721e4 chromedriver + 549348\n7   chromedriver                        0x0000000102566958 chromedriver + 502104\n8   chromedriver                        0x0000000102566220 chromedriver + 500256\n9   chromedriver                        0x00000001025a9628 chromedriver + 775720\n10  chromedriver                        0x0000000102564b40 chromedriver + 494400\n11  chromedriver                        0x0000000102565988 chromedriver + 498056\n12  chromedriver                        0x00000001028c7924 chromedriver + 4045092\n13  chromedriver                        0x00000001028cbe68 chromedriver + 4062824\n14  chromedriver                        0x00000001028d2088 chromedriver + 4087944\n15  chromedriver                        0x00000001028cc96c chromedriver + 4065644\n16  chromedriver                        0x00000001028a4e64 chromedriver + 3903076\n17  chromedriver                        0x00000001028e855c chromedriver + 4179292\n18  chromedriver                        0x00000001028e86b4 chromedriver + 4179636\n19  chromedriver                        0x00000001028f8978 chromedriver + 4245880\n20  libsystem_pthread.dylib             0x00000001952f7fa8 _pthread_start + 148\n21  libsystem_pthread.dylib             0x00000001952f2da0 thread_start + 8","time":{"start":1691999550988,"stop":1691999657673,"duration":106685}}]},"tags":["@pytest.mark.usefixtures('init_driver')"]},"source":"7a71e2b570bd0952.json","parameterValues":["'chrome'"]}